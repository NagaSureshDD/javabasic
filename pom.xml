<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
      <groupId>com.alacritysys.developer</groupId>
      <artifactId>platform-plugin-bom</artifactId>
      <version>2.0.0-RELEASE</version>
   </parent>
  <groupId>org.agileguru</groupId>
  <artifactId>baby</artifactId>
  <version>0.0.1-SNAPSHOT</version>
   <packaging>war</packaging>
   <name>Baby REST Server</name>
   <description>Baby REST Server</description>
   <url>${api.site.base}/${project.artifactId}</url>
   <organization>
      <name>Alacrity Integrated</name>
      <url>http://www.alacritysys.com</url>
   </organization>
   <scm>
      <connection>scm:git:${scm.base}/Playground/baby.git</connection>
      <developerConnection>scm:git:${scm.base}/Playground/baby.git</developerConnection>
      <url>${scm.base}/summary/Playground/baby.git</url>
   </scm>
   <ciManagement>
      <system>Jenkins</system>
      <url>${ci.base}/job/Playground/job/baby</url>
   </ciManagement>
   <developers>
      <developer>
         <id>graghupa</id>
         <name>Guru Raghupathy</name>
         <email>webtechguru@gmail.com</email>
         <organization>Alacrity Integrated</organization>
         <organizationUrl>http://www.alacritysys.com</organizationUrl>
         <roles>
            <role>Project Architect</role>
         </roles>
      </developer>
   </developers>
   <properties>
      <image.name>${docker.base.name}/${project.artifactId}/${project.artifactId}:${project.version}</image.name>
      <image.base.from>${docker.base.name}/openjdk:1.0.0</image.base.from>
      <app.dest.dir>/app</app.dest.dir>
   </properties>
   <distributionManagement>
      <snapshotRepository>
         <uniqueVersion>false</uniqueVersion>
         <id>snapshots</id>
         <name>snapshots</name>
         <url>${snapshot.deploy.repo}</url>
      </snapshotRepository>
      <repository>
         <uniqueVersion>false</uniqueVersion>
         <id>release</id>
         <name>release</name>
         <url>${release.deploy.repo}</url>
      </repository>
   </distributionManagement>
   <dependencyManagement>
      <dependencies>
         <dependency>
           <groupId>com.alacritysys.libs</groupId>
           <artifactId>web</artifactId>
           <version>6.0.0-RELEASE</version>
         </dependency>
         <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured-all</artifactId>
            <version>4.1.2</version>
         </dependency>
         <dependency>
            <groupId>com.alacritysys.platform</groupId>
            <artifactId>platform-bom</artifactId>
            <version>6.0.0-RELEASE</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
      </dependencies>
   </dependencyManagement>
   <dependencies>
       <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-devtools</artifactId>
        <optional>true</optional>
        <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.projectlombok</groupId>
         <artifactId>lombok</artifactId>
      </dependency>
      <dependency>
        <groupId>com.alacritysys.frameworks</groupId>
        <artifactId>restobjects</artifactId>
      </dependency>
      <dependency>
        <groupId>com.alacritysys.libs</groupId>
        <artifactId>web</artifactId>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-actuator</artifactId>
      </dependency>
      <dependency>
        <groupId>de.codecentric</groupId>
        <artifactId>spring-boot-admin-starter-client</artifactId>
      </dependency>
      <dependency>
        <groupId>com.alacritysys.frameworks</groupId>
        <artifactId>app-testing</artifactId>
        <scope>test</scope>
        <exclusions>
            <exclusion>
                <groupId>io.rest-assured</groupId>
                <artifactId>json-path</artifactId>
            </exclusion>
            <exclusion>
                <groupId>io.rest-assured</groupId>
                <artifactId>json-schema-validator</artifactId>
            </exclusion>
        </exclusions>
      </dependency>
      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-test</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.rest-assured</groupId>
        <artifactId>spring-mock-mvc</artifactId>
        <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>io.rest-assured</groupId>
          <artifactId>rest-assured-all</artifactId>
          <scope>test</scope>
      </dependency>
   </dependencies>
   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
               <source>1.8</source>
               <target>1.8</target>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <executions>
               <execution>
                  <id>start-agent-UT</id>
                  <phase>test</phase>
                  <goals>
                     <goal>prepare-agent</goal>
                  </goals>
               </execution>
               <execution>
                  <id>start-agent-IT</id>
                  <phase>pre-integration-test</phase>
                  <goals>
                     <goal>prepare-agent-integration</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
               <excludes>
                  <exclude>**/*.java</exclude>
               </excludes>
            </configuration>
            <executions>
               <execution>
                  <id>Unit-Tests</id>
                  <phase>test</phase>
                  <goals>
                     <goal>test</goal>
                  </goals>
                  <configuration>
                     <excludes>
                        <exclude>none</exclude>
                     </excludes>
                     <includes>
                        <include>**/*.java</include>
                     </includes>
                  </configuration>
               </execution>
               <execution>
                  <id>Integration-Tests</id>
                  <phase>integration-test</phase>
                  <goals>
                     <goal>test</goal>
                  </goals>
                  <configuration>
                     <excludes>
                        <exclude>none</exclude>
                     </excludes>
                     <includes>
                        <include>**/*.java</include>
                     </includes>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
               <failOnMissingWebXml>false</failOnMissingWebXml>
            </configuration>
         </plugin>
         <plugin>
            <groupId>pl.project13.maven</groupId>
            <artifactId>git-commit-id-plugin</artifactId>
            <executions>
               <execution>
                  <id>gather-git-data</id>
                  <goals>
                     <goal>revision</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
               <prefix>git</prefix>
               <verbose>false</verbose>
               <generateGitPropertiesFile>true</generateGitPropertiesFile>
               <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
               <gitDescribe>
                  <skip>false</skip>
                  <always>false</always>
                  <dirty>-dirty</dirty>
               </gitDescribe>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <executions>
               <execution>
                  <goals>
                     <goal>repackage</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <configuration>
               <images>
                  <image>
                     <name>${image.name}</name>
                     <build>
                        <from>${image.base.from}</from>
                        <assembly>
                           <descriptorRef>artifact</descriptorRef>
                           <targetDir>${app.dest.dir}</targetDir>
                        </assembly>
                        <cmd>
                           <exec>
                              <arg>java</arg>
                              <arg>-jar</arg>
                              <arg>${app.dest.dir}/${project.artifactId}-${project.version}.war</arg>
                           </exec>
                        </cmd>
                     </build>
                  </image>
               </images>
            </configuration>
            <executions>
               <execution>
                  <id>create-run-stop-image</id>
                  <phase>install</phase>
                  <goals>
                     <goal>build</goal>
                  </goals>
               </execution>
               <execution>
                  <id>deploy-to-repo</id>
                  <phase>deploy</phase>
                  <goals>
                     <goal>push</goal>
                     <goal>remove</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>
   <reporting>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
         </plugin>
         <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
         </plugin>
      </plugins>
   </reporting>
</project>